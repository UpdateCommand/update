#!/bin/sh
set -euf

## Program Tracking

program_command="update"
program_version="8.0.1"
program_updated="2025-02-27T14:23:13Z"
program_license="GPL-2.0-or-later or contact us for custom"
program_contact="Joel Parker Henderson (https://joelparkerhenderson.com)"

## Help Function

help(){
cat << EOF

Update Command

Run update commands for everything we use on all platforms.

Guidance:

  * Each script should be testing that it has what it needs to run.
    This includes testing for any platform-specific needs.

  * Each script should try to clean before running and after running.
    This helps create disk space, and helps maintain dependencies.

We welcome patches, pull requests, and ideas.


## Options

  * --foo=<value>:
      set the foo variable to a value

  * -h --help:
      print helpful information

  * -v --version:
      print the program version number

  * --program-command:
      print the program command name

  * --program-version:
      print the program version number

  * --program-updated:
      print the program updated date

  * --program-license:
      print the program license name

  * --program-contact:
      print the program contact information for the maintainer

Heuristics for ordering:

  1. Run all user scripts in <config>/run/start

  2. Update OS e.g. Ubuntu \`do-release-upgrade\`, macOS \`softwareupdate\`.

  3. Update system packages e.g. Debian \`apt\`, RedHat \`yum\`, macOS \`brew\`.

  4. Update shells e.g. Z Shell.

  5. Update languages e.g. Rust.

  6. Update tool packages: e.g. Node \`npm\`, Python \`pip\`, Ruby \`gem\`.

  7. Update repositories: \`/opt\`, \`~/git\`, etc.

  2. Run all user scripts in ~/.config/updatecommand/run/finish

## Tracking

  * Command: $program_command
  * Version: $program_version
  * Updated: $program_updated
  * License: $program_license
  * Contact: $program_contact
EOF
}

## Options
if [ "$#" -eq 1 ]; then
  case "$1" in
    -h|--help)
      help; exit 0
      ;;
    -v|--version)
      out "$program_version"; exit 0
      ;;
    --program-command)
      out "$program_command"; exit 0
      ;;
    --program-version)
      out "$program_version"; exit 0
      ;;
    --program-updated)
      out "$program_version"; exit 0
      ;;
    --program-license)
      out "$program_license"; exit 0
      ;;
    --program-contact)
      out "$program_contact"; exit 0
      ;;
    --*=*)
      key="${1#--}"; key="${key%%=*}";
      val="${1#*=}";
      eval "$key"=\$val
      ;;
  esac
fi

## Update operating system
. update-ubuntu-release || :
. update-macos || :

## Update via system-wide package managers
. update-apk || :
. update-apt || :
. update-brew || :
. update-brewfile || :
. update-cards || :
. update-choco || :
. update-dnf || :
. update-emerge || :
. update-eopkg || :
. update-freebsd || :
. update-guix || :
. update-mas || :
. update-nix || :
. update-pacman || :
. update-opkg || :
. update-pkg || :
. update-pkg-add || :
. update-prt-get || :
. update-scoop || :
. update-slackpkg || :
. update-snap || :
. update-urpmi || :
. update-xbps || :
. update-yay || :
. update-yum || :
. update-zypper || :

# Update system shells
. update-oh-my-zsh || :

# Update system languages
. update-rustup || :

# Update via tool-specific package managers
. update-apm || :
. update-asdf || :
. update-cabal || :
. update-cargo || :
. update-cargo-project || :
. update-cargo-project-manifests || :
. update-conda || :
. update-gem || :
. update-gemfile || :
. update-helm || :
. update-mix || :
. update-motion || :
. update-pip || :
. update-pipenv || :
. update-pod || :
. update-podfile || :
. update-poetry || :
. update-npm || :
. update-npm-n || :
. update-npm-global || :
. update-pnpm || :
. update-pnpm-global || :
. update-yarn || :

# Update repositories
. update-hg-pull || :
. update-git-pull || :

# Update individual programs
. update-az || :
