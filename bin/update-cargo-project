#!/bin/sh
set -euf

# Example code to find each cargo project and update it:
#
#     find "$HOME" -type f -name 'Cargo.toml' -exec dirname {} \; | 
#     while read -r x; do 
#         cd "$x" &&
#         update-cargo-project
#     done

update_cargo_project() {
    # Rust cargo package manager
    if command -v cargo >/dev/null 2>&1; then
        # Is this command running inside a cargo project?
        if cargo check>/dev/null 2>&1; then 
            cargo update --aggressive
            cargo check --all-targets
            cargo build --all-targets
            cargo test --all-targets --no-run
            # Is "cargo upgrade" available?
            # If yes, then upgrade the Cargo.toml file.
            if cargo upgrade --help>/dev/null 2>&1; then
                cargo upgrade --recursive true
            fi
        fi
        # Delete old build artifacts.
        if cargo --list | grep -q '^ *sweep$'; then 
            cargo sweep --installed
            # Rebuild all dependencies that are older than 90 days.
            # As of 2024-02-17 this is the least-worst way we know
            # to delete old dependencies that are no longer used.
            # Replace this code when there's any better solution,
            # such as a cargo command that can delete unreachables.
            # We choose 90 days because it's a reasonably long time.
            cargo sweep --time 90
            cargo update --aggressive
            cargo check --all-targets
            cargo build --all-targets
            cargo test --all-targets --no-run
        fi
        # Delete unused dependencies.
        # As of 2024-02-17 cargo-udeps requires nightly to run.
        if cargo --list | grep -q '^ *cargo-udeps$'; then 
            if rustup toolchain list | grep -q '^nightly-'; then
                # cargo +nightly udeps
            fi
        fi
    fi
}

update_cargo_project
